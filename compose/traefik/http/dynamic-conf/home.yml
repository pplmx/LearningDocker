### Dynamic Configuration
tls:
    certificates:
        - certFile: /certs/cert.pem
          keyFile: /certs/key.pem

http:
    routers:
        dashboard:
            rule: "Host(`traefik.x.internal`)"
            service: api@internal
            tls: {}

        portainer:
            rule: "Host(`portainer.x.internal`)"
            service: "portainer"
            tls: {}

        adh:
            rule: "Host(`adh.x.internal`)"
            service: "adh"
            tls: {}

        uptime:
            rule: "Host(`uptime.x.internal`)"
            service: "uptime"
            tls: {}

        homarr:
            rule: "Host(`homarr.x.internal`)"
            service: "homarr"
            tls: {}

        prom:
            rule: "Host(`prom.x.internal`)"
            service: "prom"
            tls: {}

        grafana:
            rule: "Host(`grafana.x.internal`)"
            service: "grafana"
            tls: {}

        ha:
            rule: "Host(`ha.x.internal`)"
            service: "ha"
            tls: {}

    services:
        portainer:
            loadBalancer:
                servers:
                    -   url: "http://portainer:9000"

        adh:
            loadBalancer:
                servers:
                    # 访问 http://192.168.31.109:3000, 进行配置, 8080 是页面重新配置的
                    # 192.168.31.109 是 docker 宿主机的 ip
                    -   url: "http://host.docker.internal:8080"

        uptime:
            loadBalancer:
                servers:
                    -   url: "http://uptime:3001"

        homarr:
            loadBalancer:
                servers:
                    -   url: "http://homarr:7575"

        prom:
            loadBalancer:
                servers:
                    -   url: "http://prometheus:9090"

        grafana:
            loadBalancer:
                servers:
                    -   url: "http://grafana:3000"

        ha:
            loadBalancer:
                servers:
                    -   url: "http://host.docker.internal:8123"
